import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class TestCardInfo extends StatelessWidget {
  const TestCardInfo({super.key});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: const EdgeInsets.all(16),
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'ƒ∞yzico Resmi Test Kartlarƒ±',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Colors.green,
              ),
            ),
            const SizedBox(height: 12),
            const Text(
              'Ba≈üarƒ±lƒ± √ñdeme Test Kartlarƒ±:',
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 16,
                color: Colors.green,
              ),
            ),
            const SizedBox(height: 8),
            _buildSuccessCardSection(),
            const SizedBox(height: 16),
            const Text(
              'Hata Testi Kartlarƒ±:',
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 16,
                color: Colors.orange,
              ),
            ),
            const SizedBox(height: 8),
            _buildErrorCardSection(),
            const SizedBox(height: 16),
            const Divider(),
            const SizedBox(height: 8),
            const Text(
              'üí° ƒ∞pucu:',
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 16,
                color: Colors.blue,
              ),
            ),
            const SizedBox(height: 8),
            const Text('‚Ä¢ Kartlara tƒ±klayarak kart numarasƒ±nƒ± kopyalayabilirsiniz'),
            const Text('‚Ä¢ Ba≈üarƒ±lƒ± kartlar ile √∂deme i≈ülemi tamamlanƒ±r'),
            const Text('‚Ä¢ Hata kartlarƒ± farklƒ± hata senaryolarƒ±nƒ± sim√ºle eder'),
            const Text('‚Ä¢ T√ºm kartlar ƒ∞yzico sandbox ortamƒ±nda √ßalƒ±≈üƒ±r'),
            const Text('‚Ä¢ Son kullanma tarihi: 12/30, CVC: 123 kullanƒ±n'),
          ],
        ),
      ),
    );
  }

  Widget _buildSuccessCardSection() {
    final successCards = [
      {'number': '5528790000000008', 'bank': 'Halkbank', 'type': 'Master Card'},
      {'number': '5400360000000003', 'bank': 'Garanti', 'type': 'Master Card'},
      {'number': '4766620000000001', 'bank': 'Denizbank', 'type': 'Visa'},
      {'number': '4987490000000002', 'bank': 'Finansbank', 'type': 'Visa'},
      {'number': '5890040000000016', 'bank': 'Akbank', 'type': 'Master Card'},
      {'number': '5170410000000004', 'bank': 'Garanti', 'type': 'Master Card'},
    ];

    return Column(
      children: successCards.map((card) => 
        _buildCardTile(
          card['number']!,
          '${card['bank']} - ${card['type']}',
          Colors.green.shade50,
          Colors.green,
        )
      ).toList(),
    );
  }

  Widget _buildErrorCardSection() {
    final errorCards = [
      {'number': '4111111111111129', 'description': 'Yetersiz bakiye'},
      {'number': '4129111111111111', 'description': 'ƒ∞≈ülem reddedildi'},
      {'number': '4125111111111115', 'description': 'Kartƒ±n s√ºresi dolmu≈ü'},
      {'number': '4124111111111116', 'description': 'Ge√ßersiz CVC'},
      {'number': '4123111111111117', 'description': 'Kart sahibine izin verilmez'},
      {'number': '4127111111111113', 'description': 'Kayƒ±p kart'},
    ];

    return Column(
      children: errorCards.map((card) => 
        _buildCardTile(
          card['number']!,
          card['description']!,
          Colors.orange.shade50,
          Colors.orange,
        )
      ).toList(),
    );
  }

  Widget _buildCardTile(String cardNumber, String description, Color bgColor, Color textColor) {
    return Container(
      margin: const EdgeInsets.only(bottom: 8),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: textColor.withAlpha(77)), // 0.3 * 255 ‚âà 77
      ),
      child: ListTile(
        dense: true,
        title: Text(
          cardNumber,
          style: TextStyle(
            fontWeight: FontWeight.bold,
            fontSize: 16,
            fontFamily: 'Courier',
            color: textColor,
          ),
        ),
        subtitle: Text(
          description,
          style: TextStyle(
            color: textColor.withAlpha(204), // 0.8 * 255 ‚âà 204
            fontSize: 13,
          ),
        ),
        trailing: IconButton(
          icon: Icon(Icons.copy, color: textColor, size: 20),
          onPressed: () => _copyToClipboard(cardNumber),
          tooltip: 'Kopyala',
        ),
        onTap: () => _copyToClipboard(cardNumber),
      ),
    );
  }

  void _copyToClipboard(String text) {
    Clipboard.setData(ClipboardData(text: text));
    // Snackbar g√∂stermek i√ßin context'e ihtiya√ß var ama bu widget'ta yok
    // Bu y√ºzden sadece kopyalama yapƒ±yoruz
  }
}
